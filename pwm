#!/bin/bash

entries_file="$HOME/Media/pw/entries"
deleted_entries_file="$HOME/Media/pw/deleted_entries"
seed_file="$HOME/Media/pw/seed.gpg"

list_entries() {
    IFS=$'\n' 
    entries=($(cat "$entries_file"))
    unset IFS 
    options=()
    for entry in "${entries[@]}"; do
        options+=("$entry" "")
    done
    dialog --title "List of Entries" --menu "choose an entry:" 0 0 10 "${options[@]}" 2>&1 >/dev/tty
}

copy_entry() {
    selected_entry="$1"
    if [ -e "$entries_file" ]; then
        entry_content=$(grep "^$selected_entry$" "$entries_file")
        if [ -n "$entry_content" ]; then
            word_count=$(echo "$entry_content" | wc -w)
            if [ "$word_count" -gt 1 ]; then
                second_word=$(echo "$entry_content" | awk '{print $2}')
                echo -n "$second_word" | xclip -sel clip
                sleep 0.5
                dialog --title "Entry Copied" --msgbox "Second word copied to clipboard:\n\n$second_word" 0 0
            else
                first_word=$(echo "$entry_content" | awk '{print $1}')
                echo -n "$first_word" | xclip -sel clip
                sleep 0.5
                dialog --title "Entry Copied" --msgbox "Only one word found, first word copied to clipboard:\n\n$first_word" 0 0
            fi
        fi
    else
        dialog --title "Error" --msgbox "No entries found in $entries_file." 0 0
    fi
}

add_entry() {
    entry_content=$(dialog --title "Enter Entry Content" --inputbox "enter the content for the new entry:" 0 0 2>&1 >/dev/tty)
    echo "$entry_content" >> "$entries_file"
    dialog --title "entry added" --msgbox "entry added to $entries_file." 0 0
}

remove_entry() {
    selected_entry=$(list_entries)
    if [ -n "$selected_entry" ]; then
        sed -i "/^$selected_entry$/d" "$entries_file"  # Delete the line from entries_file
        echo "$selected_entry" >> "$deleted_entries_file"  # Append to deleted_entries_file
        dialog --title "Entry Removed" --msgbox "entry removed from $entries_file and added to $deleted_entries_file." 0 0
    fi
}

add_entry() {
    entry_content=$(dialog --title "Enter Entry Content" --inputbox "enter the content for the new entry:" 0 0 2>&1 >/dev/tty)
    echo "$entry_content" >> "$entries_file"
    dialog --title "entry added" --msgbox "entry added to $entries_file." 0 0
}

generate_password() {
    seed=$(gpg -dq $seed_file)
    password=$(echo -n "$1" | openssl dgst -sha256 -binary -hmac "$seed" | base64 | cut -c 1-29 | sed 's/^/!/')
    
    echo -n "$password" | xclip -sel clip

    {
        for ((i = 0; i < 50; i++)); do
            sleep 0.2
            echo $((i * 2))
        done
    } | dialog --title "clearing clipboard" --gauge "clearing clipboard..." 0 0 0

    echo -n | xclip -sel clip

    dialog --title "password generated" --msgbox "password copied to clipboard and clipboard cleared." 10 40
}


generate_seed() {
    if [ -e "$seed_file" ]; then
        dialog --title "seed generation" --msgbox "seed already exists in this folder." 0 0
    else
    	read -p "To continue, please enter 'YES' in uppercase: " user_input

	    if [ "$user_input" == "YES" ]; then
	        echo "User entered 'YES'. Continuing..."
	        echo "$(openssl rand 64)" | gpg -c --output $seed_file
	        dialog --title "seed Generation" --msgbox "seed generated and stored in seed.gpg." 0 0

	    else
	        echo "Invalid input. Please enter 'YES' in uppercase to continue."
	        return
	    fi
  	fi
}

main_menu() {
    dialog --clear --title "password generator" --menu "choose an option:" 0 0 6 \
    1 "generate password" \
    2 "list entries" \
    3 "add entry" \
    4 "remove entry" \
    5 "generate seed" \
    6 "quit" \
    2>&1 >/dev/tty
}

while true; do
    choice=$(main_menu)

    case $choice in
        1)
            passphrase=$(dialog --title "Enter Passphrase" --inputbox "Enter a name of a website or thing to generate a password:" 0 0 2>&1 >/dev/tty)
            generate_password "$passphrase"
            ;;
        2)
            copy_entry "$(list_entries)"
            ;;
        3)
            add_entry
            ;;
        4)
            remove_entry
            ;;
        5)
            generate_seed
            ;;
        6)
            exit 0
            ;;
        *)
            dialog --title "Invalid Choice" --msgbox "Please choose a valid option." 0 0
            ;;
    esac
done
